version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-elenacuprova}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - ./documents:/app/documents
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_USER=${POSTGRES_USER:-elenacuprova}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  celery:
    build: .
    command: celery -A main.celery worker --loglevel=info
    volumes:
      - ./app:/app
      - ./documents:/app/documents
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    depends_on:
      - app
      - rabbitmq

  migrations:
    build: .
    command: >
      sh -c "
        alembic upgrade head || 
        (alembic init alembic && 
         alembic revision --autogenerate -m 'Initial' && 
         alembic upgrade head)
      "
    volumes:
      - ./app:/app
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-elenacuprova}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data: